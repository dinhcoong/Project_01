@model mvcweb.Models.Product

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_AdminPage.cshtml";
}
<script src="~/AppFiles/Theme/ckeditor/ckeditor.js"></script>
<h2>Product</h2>
@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data", data_restUrl = Url.Action("Create", "Products", new { id = 0 }) }))//data-resetUrl
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Thêm sản phẩm</h4>
        <div class="alert-mess">
            @ViewBag.status
        </div><div>
            @Html.ActionLink("Back to List", "Index")
        </div>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProCode, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProDesc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProDesc, new { htmlAttributes = new { @class = "form-control", @style = "height:80px" } })
                @Html.ValidationMessageFor(model => model.ProDesc, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ImageLink, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Url.Content(model.ImageLink)*@
                <img src="~/AppFiles/Images/default.png" style="margin:10px" height="80" width="80" id="imagePreview" />
                <input type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="ShowImagePreview(this,document.getElementById('imagePreview'))" />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProDetail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div ass="col-md-10">
                @Html.TextAreaFor(model => model.ProDetail, new { @id = "ProDetail", @class = "form-control", @rows = "10" }) @Html.ValidationMessageFor(model => model.ProDetail, "", new { @class = "text-danger" })
                <script>
                    CKEDITOR.replace("ProDetail");
                </script>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                   
                    @Html.CheckBoxFor(model => model.Status, new { @checked = "checked" } )
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>


    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {

        @Scripts.Render("~/bundles/jqueryval")
    }
}